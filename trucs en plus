/* const validationRules = [
	{
  	".textZone":{
    	minLength:2,
      type:String,
      match:'[aA-zZ]{0,12}',
      required:true,
    },
    "date":{
    }
  }
]

const validationRules = [
	{
  	"#test":[new minLength(3), new checkType(String), new matchRegex('[aA-zZ]')],
    '.textZone':{
    	minLength:4,
      required:true
    }
  }
]

for(const [key, rules] of Object.entries(validationRules)) {
	for(const [attr, value] of Object.entries(rules)) {
 	const inputTag = document.querySelector(key)
  	switch (attr) {
    	case 'minLength':
      	if(document.querySelector(key).value.length > value) {
        	// Pas d'erreur
        } else {
         // Erreur
        }
        break;
      case 'type':
      	if(typeof inputTag.value === 'String') {
        	...
        } else {
        ...;
        }
    }
  }
}

for(const [key, rules] of Object.entries(validationRules)) {
let tag = document....
	rules.forEach(rule => {
  	if(rule.check(tag)) {
    	....
    } els*/

    
/*
const start = new Date(Date.now());

  console.log(start.getFullYear())*/


  radiosInput.forEach(formSection => {   // deuxième bloc de code pour écouter également les radio input, je ne sais pas l'intègrer au précédent
    formSection.querySelector('[required], .one-required').addEventListener('input', () => {
      formValidation();
  
    if (formIsValid) {
      console.log(formIsValid);  
      submitBtn.style.background = '#fe142f';              // Valide, bouton rouge
      form.removeEventListener('submit', (e) => {e.preventDefault();e.stopPropagation();});
      //off('submit','form', (evt) => {evt.preventDefault()});
    } else {
      submitBtn.style.background = 'grey';                // Pas valide, bouton gris
      form.addEventListener('submit', (e) => {e.preventDefault();e.stopPropagation();})
      //on('submit', 'form', (evt) => {evt.preventDefault();evt.stopPropagation()});
    }               
      
    // HIDE ERR-MSG onChange
      if (getCheckedArr(oneRequired).some(isTrue)) {                                          // Err-msg pour les radios
        document.querySelector('form p').setAttribute("data-error-visible", "false");
      }  
      if (formSection.querySelector('.required').validity.valid) {    // "if true" sur chaque input.validity.valid
        formSection.setAttribute("data-error-visible", "false")      // Valide ? hide err-msg
      }
      if (getCheckedArr(oneRequired).some(isTrue)) {
        document.querySelector('form p').setAttribute("data-error-visible", "false");
      }                                                             // Pas valide ? show err-msg est géré au submitClick                                                    
    })
    });